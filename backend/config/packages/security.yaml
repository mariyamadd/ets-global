security:
    password_hashers:
        App\Document\User:
            algorithm: auto

    providers:
        app_user_provider:
            mongodb:
                class: App\Document\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # Separate firewall for registration that doesn't require JWT
        user_registration:
            pattern: ^/api/user
            stateless: true
            security: false

        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        # All other API routes require JWT
        api:
            pattern: ^/api
            stateless: true
            jwt: ~
            provider: app_user_provider

    access_control:
        - { path: ^/api/user, roles: IS_AUTHENTICATED_ANONYMOUSLY } 
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }       
        - { path: ^/api/verify, roles: IS_AUTHENTICATED_FULLY }
